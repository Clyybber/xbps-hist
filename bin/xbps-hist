#!/usr/bin/env bash

#-------------#
# SCRIPT NAME #
#-------------#
_name_="${0##*/}"
_version_="0.3"

#-----------#
# ERROR MSG #
#-----------#{{{
_em_(){ (&>2 printf "%s: %s \n" "${_name_^}" "$@") && exit 1 ;}
#}}}

#---------------#
# XBPS LOG FILE #
#---------------#{{{
_XBPS_DIR_="/var/log/socklog/xbps"
_XBPS_HISTORY_="/tmp/xbps_log"

: > $_XBPS_HISTORY_

while read -r L ; do
	cat $L >> $_XBPS_HISTORY_
done < <(ls  -1 $_XBPS_DIR_/{*.u,current} 2> /dev/null)
#}}}

#------------------#
# SCRIPT VARIABLES #
#------------------#{{{
declare -A STATE=( ["install"]="Installed" ["remove"]="Removed" ["update"]="updating" )
#}}}

#---------#
# ACTION  #
#---------#
_action_(){
local a="$_ACTION_"

case "${a^^}" in
    INSTALL|\
    REMOVE|\
    UPDATE )
        action=${STATE[${a,,}]}
        ;;
    * )
		_em_ "Invalid action '$1'. Try: '$_name_ -h' for more information"
        ;;
esac
}

#------#
# DATE #
#------#
_date_(){
local d="$_DATE_"

(date -d "$d" +%Y-%m-%d\ %H:%M:%S &> /dev/null) && date=${d/ /T} || _em_ "Invalid date '$1'. Try: '$_name_ -h' for more information"
}

#--------#
# SEARCH #
#--------#
_search_(){
local line
local sr="$_SEARCH_"
while read -ra line ; do
    local pkg=${line[7]:1:-1}
    local _pkg=${pkg%-*}
    local DATE="${line[0]%.*}"
          DATE="${DATE/T/ }"
    if [ "$action" ] && [ "$date" ] ; then
        [ "$_pkg" = "$sr" ] && [ "$action" = "${line[6]}" ] && [[ $DATE =~ $date ]] && {
            [ "${line[8]}" = "successfully" ] &&  printf "%s\n" "$DATE ${line[6]}, $pkg, ${line[8]}, ${line[9]} ${line[10]}"
        }
    elif [ "$action" ] ; then
        [ "$_pkg" = "$sr" ] && [ "$action" = "${line[6]}" ] && {
            [ "${line[8]}" = "successfully" ] &&  printf "%s\n" "$DATE ${line[6]}, $pkg, ${line[8]}, ${line[9]} ${line[10]}"
        }
    elif [ "$date" ] ; then
        [ "$_pkg" = "$sr" ] && [[ $DATE =~ $date ]] && {
            [ "${line[8]}" = "successfully" ] &&  printf "%s\n" "$DATE ${line[6]}, $pkg, ${line[8]}, ${line[9]} ${line[10]}"
        }
    else
        [ "$_pkg" = "$sr" ] && [ "${line[8]}" = "successfully" ] &&  printf "%s\n" "$DATE ${line[6]}, $pkg, ${line[8]}, ${line[9]} ${line[10]}"
    fi
done < $_XBPS_HISTORY_ | column -t -s ","
}

#------#
# LIST #
#------#
_list_(){
local line
local sr="$_SEARCH_"
while read -ra line ; do
    local pkg=${line[7]:1:-1}
    local DATE="${line[0]%.*}"
          DATE="${DATE/T/ }"
    if [ "$action" ] && [ "$date" ] ; then
        [ "$action" = "${line[6]}" ] && [[ $DATE =~ $date ]] && {
            [ "${line[8]}" = "successfully" ] &&  printf "%s\n" "$DATE ${line[6]}, $pkg, ${line[8]}, ${line[9]} ${line[10]}"
        }
    elif [ "$action" ] ; then
        [ "$action" = "${line[6]}" ] && [ "${line[8]}" = "successfully" ] && printf "%s\n" "$DATE ${line[6]}, $pkg, ${line[8]}, ${line[9]} ${line[10]}"
    elif [ "$date" ] ; then
        [[ $DATE =~ $date ]] && [ "${line[8]}" = "successfully" ] && printf "%s\n" "$DATE ${line[6]}, $pkg, ${line[8]}, ${line[9]} ${line[10]}"
    else
        [ "${line[8]}" = "successfully" ] && printf "%s\n" "$DATE ${line[6]}, $pkg, ${line[8]}, ${line[9]} ${line[10]}"
    fi
done < $_XBPS_HISTORY_ | column -t -s ","
}

#-------------#
# HELP DIALOG #
#-------------#
_help_(){
cat <<- HELP
Usage: ${_name_} [OPTIONS] [PKGNAME...]

OPTIONS
 -a <ACTION>    What [ACTIONS] you looking for
 -d <DATE>      Set date and time to search
 -s <PKG>       Search for speacial Package
 -l             List all packages
 -h             Show this help dialog

ACTIONS
 install         any use of xbps-install
 remove          any use of xbps-remove
 update          any use of xbps-install -Su

NOTE
 the search start from the day you install socklog-void and enable (socklog-unix nanoklogd) add \$USER to socklog GROUND
 Valide date and time : YYYY-MM-DD HH:MM:SS
HELP
exit 0
}

#---------------#
# MAIN FUNCTION #
#---------------#
_main_(){
while getopts ":a:d:s:lfh" OPT ; do
    case "$OPT" in
        a )
            _ACTION_="$OPTARG"
            ;;
        d )
            _DATE_="$OPTARG"
            ;;
        s )
            _SEARCH_="$OPTARG"
            ((_C_++))
            ;;
        l )
            _LIST_=true
            ((_C_++))
            ;;
        h )
            _HELP_=true
            ((_C_++))
            ;;
        : )
            _em_ "Option '-$OPTARG' Requires an argument. Try: '$_name_ -h' for more information"
            ;;
        * )
			_em_ "Invalid option -'$OPTARG'. Try: '$_name_ -h' for more information"
            ;;
    esac
done
}

#--------------------#
# RUN MAIN FUNCTION  #
#--------------------#
_main_ "$@"

#-----------------#
# RUN USER OPTION #
#-----------------#
[ "$_C_" ] && _em_ "only one operation may be used at a time"
[ "$_HELP_" ]   && _help_ || true
[ "$_ACTION_" ] && _action_ || true
[ "$_DATE_" ]   && _date_ || true
[ "$_SEARCH_" ] && _search_ || true
[ "$_LIST_" ]   && _list_ || true
